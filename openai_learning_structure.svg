<svg viewBox="0 0 1200 800" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#4F46E5;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#7C3AED;stop-opacity:1" />
    </linearGradient>
    <linearGradient id="grad2" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#059669;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#0D9488;stop-opacity:1" />
    </linearGradient>
    <filter id="shadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="3" dy="3" stdDeviation="2" flood-color="#000" flood-opacity="0.3"/>
    </filter>
  </defs>
  
  <!-- Background -->
  <rect width="1200" height="800" fill="#f8fafc"/>
  
  <!-- Title -->
  <text x="600" y="40" text-anchor="middle" font-family="Arial, sans-serif" font-size="24" font-weight="bold" fill="#1e293b">
    OpenAI API 학습 구조도
  </text>
  
  <!-- Chapter 2 Section -->
  <g>
    <rect x="50" y="80" width="500" height="650" rx="15" fill="url(#grad1)" opacity="0.1" stroke="#4F46E5" stroke-width="2"/>
    <text x="300" y="110" text-anchor="middle" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#4F46E5">
      Chapter 2: OpenAI API 기초
    </text>
    
    <!-- Setup -->
    <rect x="80" y="130" width="440" height="60" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="100" y="150" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">1. 환경 설정</text>
    <text x="100" y="170" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• API Key 설정 • 라이브러리 설치</text>
    
    <!-- Tokenization -->
    <rect x="80" y="210" width="440" height="60" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="100" y="230" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">2. 토큰화 (Tokenization)</text>
    <text x="100" y="250" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• tiktoken 사용 • 토큰 분할 확인</text>
    
    <!-- Basic Chat -->
    <rect x="80" y="290" width="440" height="60" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="100" y="310" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">3. 기본 채팅 완성</text>
    <text x="100" y="330" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• chat.completions.create() • 한국어 대화</text>
    
    <!-- Context Management -->
    <rect x="80" y="370" width="440" height="60" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="100" y="390" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">4. 대화 맥락 관리</text>
    <text x="100" y="410" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• 메시지 히스토리 • 연속 대화</text>
    
    <!-- Streaming -->
    <rect x="80" y="450" width="440" height="60" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="100" y="470" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">5. 스트리밍</text>
    <text x="100" y="490" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• 실시간 응답 • stream=True</text>
    
    <!-- Structured Output -->
    <rect x="80" y="530" width="440" height="60" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="100" y="550" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">6. 구조화된 출력</text>
    <text x="100" y="570" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• JSON 형식 • response_format</text>
    
    <!-- Advanced Features -->
    <rect x="80" y="610" width="440" height="100" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="100" y="630" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">7. 고급 기능</text>
    <text x="100" y="650" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• 이미지 분석 (Vision API)</text>
    <text x="100" y="670" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• 함수 호출 (Function Calling)</text>
    <text x="100" y="690" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• 레거시 모델 (GPT-3.5-turbo-instruct)</text>
  </g>
  
  <!-- Chapter 3 Section -->
  <g>
    <rect x="650" y="80" width="500" height="650" rx="15" fill="url(#grad2)" opacity="0.1" stroke="#059669" stroke-width="2"/>
    <text x="900" y="110" text-anchor="middle" font-family="Arial, sans-serif" font-size="20" font-weight="bold" fill="#059669">
      Chapter 3: 프롬프트 엔지니어링
    </text>
    
    <!-- Concept -->
    <rect x="680" y="130" width="440" height="80" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="700" y="150" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">1. 프롬프트 엔지니어링 개념</text>
    <text x="700" y="170" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• AI 모델과의 상호작용 최적화</text>
    <text x="700" y="190" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• 입력 설계 기법</text>
    
    <!-- System Messages -->
    <rect x="680" y="230" width="440" height="60" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="700" y="250" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">2. 시스템 메시지 활용</text>
    <text x="700" y="270" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• 응답 길이/형식 제어 • 역할 설정</text>
    
    <!-- Templates -->
    <rect x="680" y="310" width="440" height="60" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="700" y="330" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">3. 템플릿 활용</text>
    <text x="700" y="350" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• 요리 레시피 생성 • 재사용 가능한 패턴</text>
    
    <!-- Output Control -->
    <rect x="680" y="390" width="440" height="60" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="700" y="410" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">4. 출력 형식 제어</text>
    <text x="700" y="430" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• JSON 구조화 • 특정 포맷 강제</text>
    
    <!-- Classification -->
    <rect x="680" y="470" width="440" height="60" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="700" y="490" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">5. 분류 및 판단</text>
    <text x="700" y="510" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• 감정 분석 • AI 관련성 판단</text>
    
    <!-- Few-shot Learning -->
    <rect x="680" y="550" width="440" height="80" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="700" y="570" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">6. Few-shot Learning</text>
    <text x="700" y="590" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• 예시 기반 학습 • 대화형 vs 완성형</text>
    <text x="700" y="610" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• example_user/example_assistant</text>
    
    <!-- Step-by-step -->
    <rect x="680" y="650" width="440" height="60" rx="8" fill="#fff" stroke="#e2e8f0" stroke-width="1" filter="url(#shadow)"/>
    <text x="700" y="670" font-family="Arial, sans-serif" font-size="14" font-weight="bold" fill="#1e293b">7. 단계별 사고</text>
    <text x="700" y="690" font-family="Arial, sans-serif" font-size="12" fill="#64748b">• 복잡한 문제 해결 • Chain of Thought</text>
  </g>
  
  <!-- Connection Arrow -->
  <path d="M 550 400 Q 600 400 650 400" fill="none" stroke="#6366f1" stroke-width="3" marker-end="url(#arrowhead)"/>
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#6366f1"/>
    </marker>
  </defs>
  
  <!-- Connection Label -->
  <rect x="570" y="385" width="60" height="30" rx="5" fill="#fff" stroke="#6366f1" stroke-width="1"/>
  <text x="600" y="405" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" font-weight="bold" fill="#6366f1">
    발전
  </text>
  
  <!-- Bottom Summary -->
  <rect x="50" y="750" width="1100" height="40" rx="10" fill="#f1f5f9" stroke="#cbd5e1" stroke-width="1"/>
  <text x="600" y="775" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#334155">
    기본 API 사용법 → 고급 프롬프트 기법 → 실용적 AI 애플리케이션 개발
  </text>
</svg>